<script type="text/javascript" src="path-to-mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
</script>
<script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>

<div class="grid">
  <div class="row">
    <div class="span10 offset1"> 
      Recuerde que una gramática $G$ es una cuaterna $G =(\Sigma,V,P,S)$.
    </div>
  </div>
  <div class="row">
    <div class="span10 offset1"> 
      <ol>
        <li>$\Sigma$ es el conjunto de terminales. 
        <li>$V$ es un conjunto (disjunto de $\Sigma$) que se denomina conjunto de <i>variables sintácticas</i> o <i>categorías gramáticales</i>,
        <li>$P$ es un conjunto de pares de $V \times (V \cup \Sigma )^*$. En vez de escribir
        un par usando la notación $(A, \alpha) \in P$ se escribe $A \rightarrow \alpha$.
        Un elemento de $P$ se denomina producción. 
        <li>Por último, $S$ es un símbolo del conjunto
        $V$ que se denomina símbolo de arranque.
      </ol>
    </div>
  </div>
  <div class="row">
    <div class="span10 offset1"> 
      <ol>
        <li> $\Sigma = \{$ {, }, (")>, <("), (, ), ,, ;, ., ", @, @head $\}$,
        <li> $V = \{ document, block\_head, sentence\_head\_tags, parameters, parameter, $<br />$ block, text, literal, ID, TAG \}$
        <li> Reglas de producción:
          <ol>
            <li>$document \rightarrow block\_head)? (block | text)*$
            <li>$block\_head \rightarrow '@head' '\{' (sentence\_head\_tags) '\}'$
            <li>$sentence\_head\_tags \rightarrow TAG (parameters)? ( ';' | ('\{' text '\}' ) )?$
            <li>$parameters \rightarrow '(`' parameter ("," parameter )* ')'$
            <li>$parameter \rightarrow ID (':' '"'  ( ([\hat{}"\backslash] | ' \backslash '.)* ) '"')?$
            <li>$block \rightarrow  TAG ID? ('.' ID )* parameters? (';' | ('\{' (block | text)+ '\}' ))$
            <li>$text \rightarrow (literal | (!'(")>' ( '\backslash'. / [\hat{} @\}] ) )+ )+$
            <li>$literal \rightarrow '(")>' (!('<(")') . )* '<(")'$
            <li>$ID \rightarrow [a-zA-Z\backslash][a-zA-Z\_0-9-]*$
            <li>$TAG \rightarrow '@' ID$
          </ol>
        <li> Expresión de arranque: $document$
      </ol>
    </div>
  </div>
</div>

